AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  museepa

  Sample SAM Template for museepa


Globals:
  Function:
    Timeout: 25
    MemorySize: 128
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 'arn:aws:logs:*:*:*'
        - PolicyName: get-secrets-db-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: 'arn:aws:secretsmanager:us-west-1:471112501035:secret:prod/musepa/vercel/postgres-REotkz'
        - PolicyName: manage-cognito-users-pool-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cognito-idp:AdminCreateUser
                  - cognito-idp:AdminAddUserToGroup
                  - cognito-idp:RespondToAuthChallenge
                  - cognito-idp:AdminInitiateAuth
                  - cognito-idp:InitiateAuth
                  - cognito-idp:AdminListGroupsForUser
                  - cognito-idp:AdminUpdateUserAttributes
                  - cognito-idp:AdminDeleteUser
                  - cognito-idp:AdminSetUserPassword
                Resource: 'arn:aws:cognito-idp:us-west-1:471112501035:userpool/us-west-1_3onWfQPhK'
        - PolicyName: s3-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource: 'arn:aws:s3:::museepa-bucket/*'
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource: 'arn:aws:s3:::museepa-bucket'


  # API Gateway
  EventApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: EventApi
      StageName: Dev
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  MuseumApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: MuseumApi
      StageName: Dev
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  WorkApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: WorkApi
      StageName: Dev
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  VisitorApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: VisitorApi
      StageName: Dev
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  ManagerApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: ManagerApi
      StageName: Dev
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  AuthApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: AuthApi
      StageName: Dev
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  # ------------ Event ------------
  GetDataEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/events/get_events/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref EventApi
            Path: /events
            Method: GET
  CreateDataEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/events/create_event/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref EventApi
            Path: /events
            Method: POST
  DeleteDataEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/events/delete_event/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref EventApi
            Path: /events/{id}
            Method: DELETE
  UpdateDataEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/events/update_event/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref EventApi
            Path: /events
            Method: PUT
  FindDataEventFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/events/find_event/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        FindEvent:
          Type: Api
          Properties:
            RestApiId: !Ref EventApi
            Path: /events/{id}
            Method: GET

  # ------------ Museum ------------
  GetDataMuseumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/museums/get_museums/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetMuseum:
          Type: Api
          Properties:
            RestApiId: !Ref MuseumApi
            Path: /museums
            Method: GET
  CreateDataMuseumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/museums/create_museum/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateMuseum:
          Type: Api
          Properties:
            RestApiId: !Ref MuseumApi
            Path: /museums
            Method: POST
  DeleteDataMuseumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/museums/delete_museum/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteMuseum:
          Type: Api
          Properties:
            RestApiId: !Ref MuseumApi
            Path: /museums/{id}
            Method: DELETE
  UpdateDataMuseumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/museums/update_museum/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateMuseum:
          Type: Api
          Properties:
            RestApiId: !Ref MuseumApi
            Path: /museums
            Method: PUT
  FindDataMuseumFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/museums/find_museum/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        FindMuseum:
          Type: Api
          Properties:
            RestApiId: !Ref MuseumApi
            Path: /museums/{id}
            Method: GET

  # ------------ Visitor ------------

  GetDataVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/visitors/get_visitors/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetVisitor:
          Type: Api
          Properties:
            RestApiId: !Ref VisitorApi
            Path: /visitors
            Method: GET
  CreateDataVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/visitors/create_visitor/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateVisitor:
          Type: Api
          Properties:
            RestApiId: !Ref VisitorApi
            Path: /visitors
            Method: POST
  DeleteDataVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/visitors/delete_visitor/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteVisitor:
          Type: Api
          Properties:
            RestApiId: !Ref VisitorApi
            Path: /visitors/{id}
            Method: DELETE
  UpdateDataVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/visitors/update_visitor/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateVisitor:
          Type: Api
          Properties:
            RestApiId: !Ref VisitorApi
            Path: /visitors
            Method: PUT
  FindDataVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/visitors/find_visitor/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        FindVisitor:
          Type: Api
          Properties:
            RestApiId: !Ref VisitorApi
            Path: /visitors/{id}
            Method: GET
  UpdateFavoriteVisitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/visitors/update_favorites_visitor/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateFavoriteVisitor:
          Type: Api
          Properties:
            RestApiId: !Ref VisitorApi
            Path: /visitors/{id}/favorite
            Method: PUT


  # ------------ Work ------------
  GetDataWorkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/works/get_works/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetEvent:
          Type: Api
          Properties:
            RestApiId: !Ref WorkApi
            Path: /works
            Method: GET
  CreateDataWorkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/works/create_work/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref WorkApi
            Path: /works
            Method: POST
  DeleteDataWorkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/works/delete_work/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteEvent:
          Type: Api
          Properties:
            RestApiId: !Ref WorkApi
            Path: /works/{id}
            Method: DELETE
  UpdateDataWorkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/works/update_work/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateEvent:
          Type: Api
          Properties:
            RestApiId: !Ref WorkApi
            Path: /works
            Method: PUT
  FindDataWorkFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/works/find_work/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        FindEvent:
          Type: Api
          Properties:
            RestApiId: !Ref WorkApi
            Path: /works/{id}
            Method: GET

  # ------------ Manager ------------
  GetDataManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/managers/get_managers/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        GetManagers:
          Type: Api
          Properties:
            RestApiId: !Ref ManagerApi
            Path: /managers
            Method: GET
  CreateDataManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/managers/create_manager/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        CreateManager:
          Type: Api
          Properties:
            RestApiId: !Ref ManagerApi
            Path: /managers
            Method: POST
  DeleteDataManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/managers/delete_manager/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        DeleteManager:
          Type: Api
          Properties:
            RestApiId: !Ref ManagerApi
            Path: /managers/{id}
            Method: DELETE
  UpdateDataManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/managers/update_manager/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        UpdateManager:
          Type: Api
          Properties:
            RestApiId: !Ref ManagerApi
            Path: /managers
            Method: PUT
  FindDataManagerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/managers/find_manager/
      Handler: app.lambda_handler
      Runtime: python3.12
      Role: !GetAtt LambdaExecutionRole.Arn
      Architectures:
        - x86_64
      Events:
        FindManager:
          Type: Api
          Properties:
            RestApiId: !Ref ManagerApi
            Path: /managers/{id}
            Method: GET

  # ------------ Auth ------------
  InsertUserPoolFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/manage_user/insert_user_pool/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        InsertUserPool:
          Type: Api
          Properties:
            RestApiId: !Ref AuthApi
            Path: /auth
            Method: POST
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/manage_user/login/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        Login:
          Type: Api
          Properties:
            RestApiId: !Ref AuthApi
            Path: /auth/login
            Method: POST
  PermissionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/manage_user/permission/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        Permission:
          Type: Api
          Properties:
            RestApiId: !Ref AuthApi
            Path: /auth/permission
            Method: POST
  SetPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: modules/manage_user/set_password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Role: !GetAtt LambdaExecutionRole.Arn
      Events:
        SetPassword:
          Type: Api
          Properties:
            RestApiId: !Ref AuthApi
            Path: /auth/set_password
            Method: POST


Outputs:
  EventApi:
    Description: "API Gateway endpoint URL for Prod stage for museepa function"
    Value: !Sub "https://${EventApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  MuseumApi:
    Description: "API Gateway endpoint URL for Prod stage for museepa function"
    Value: !Sub "https://${MuseumApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  WorkApi:
    Description: "API Gateway endpoint URL for Prod stage for museepa function"
    Value: !Sub "https://${MuseumApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  VisitorApi:
    Description: "API Gateway endpoint URL for Prod stage for museepa function"
    Value: !Sub "https://${VisitorApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  ManagerApi:
    Description: "API Gateway endpoint URL for Prod stage for museepa function"
    Value: !Sub "https://${ManagerApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  AuthApi:
    Description: "API Gateway endpoint URL for Prod stage for museepa function"
    Value: !Sub "https://${AuthApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  LambdaExecutionRoleArn:
    Description: "Implicit IAM Role created for Lambda function"
    Value: !GetAtt LambdaExecutionRole.Arn

  GetDataEventFunctionArn:
    Description: "GetDataEventFunction Lambda function ARN"
    Value: !GetAtt GetDataEventFunction.Arn
  CreateDataEventFunction:
    Description: "CreateDataEventFunction Lambda function ARN"
    Value: !GetAtt CreateDataEventFunction.Arn
  DeleteDataEventFunction:
    Description: "DeleteDataEventFunction Lambda function ARN"
    Value: !GetAtt DeleteDataEventFunction.Arn
  UpdateDataEventFunction:
    Description: "UpdateDataEventFunction Lambda function ARN"
    Value: !GetAtt UpdateDataEventFunction.Arn
  FindDataEventFunction:
    Description: "FindDataEventFunction Lambda function ARN"
    Value: !GetAtt FindDataEventFunction.Arn

  GetDataMuseumFunction:
    Description: "GetDataMuseumFunction Lambda function ARN"
    Value: !GetAtt GetDataMuseumFunction.Arn
  CreateDataMuseumFunction:
    Description: "CreateDataMuseumFunction Lambda function ARN"
    Value: !GetAtt CreateDataMuseumFunction.Arn
  DeleteDataMuseumFunction:
    Description: "DeleteDataMuseumFunction Lambda function ARN"
    Value: !GetAtt DeleteDataMuseumFunction.Arn
  UpdateDataMuseumFunction:
    Description: "UpdateDataMuseumFunction Lambda function ARN"
    Value: !GetAtt UpdateDataMuseumFunction.Arn
  FindDataMuseumFunction:
    Description: "FindDataMuseumFunction Lambda function ARN"
    Value: !GetAtt FindDataMuseumFunction.Arn

  GetDataVisitorFunction:
    Description: "GetDataVisitorFunction Lambda function ARN"
    Value: !GetAtt GetDataVisitorFunction.Arn
  CreateDataVisitorFunction:
    Description: "CreateDataVisitorFunction Lambda function ARN"
    Value: !GetAtt CreateDataVisitorFunction.Arn
  DeleteDataVisitorFunction:
    Description: "DeleteDataVisitorFunction Lambda function ARN"
    Value: !GetAtt DeleteDataVisitorFunction.Arn
  UpdateDataVisitorFunction:
    Description: "UpdateDataVisitorFunction Lambda function ARN"
    Value: !GetAtt UpdateDataVisitorFunction.Arn
  FindDataVisitorFunction:
    Description: "FindDataVisitorFunction Lambda function ARN"
    Value: !GetAtt FindDataVisitorFunction.Arn
  UpdateFavoriteVisitorFunction:
    Description: "UpdateFavoriteVisitorFunction Lambda function ARN"
    Value: !GetAtt UpdateFavoriteVisitorFunction.Arn

  GetDataWorkFunction:
    Description: "GetDataWorkFunction Lambda function ARN"
    Value: !GetAtt GetDataWorkFunction.Arn
  CreateDataWorkFunction:
    Description: "CreateDataWorkFunction Lambda function ARN"
    Value: !GetAtt CreateDataWorkFunction.Arn
  DeleteDataWorkFunction:
    Description: "DeleteDataWorkFunction Lambda function ARN"
    Value: !GetAtt DeleteDataWorkFunction.Arn
  UpdateDataWorkFunction:
    Description: "UpdateDataWorkFunction Lambda function ARN"
    Value: !GetAtt UpdateDataWorkFunction.Arn
  FindDataWorkFunction:
    Description: "FindDataWorkFunction Lambda function ARN"
    Value: !GetAtt FindDataWorkFunction.Arn

  GetDataManagerFunction:
    Description: "GetDataManagerFunction Lambda function ARN"
    Value: !GetAtt GetDataManagerFunction.Arn
  CreateDataManagerFunction:
    Description: "CreateDataManagerFunction Lambda function ARN"
    Value: !GetAtt CreateDataManagerFunction.Arn
  DeleteDataManagerFunction:
    Description: "DeleteDataManagerFunction Lambda function ARN"
    Value: !GetAtt DeleteDataManagerFunction.Arn
  UpdateDataManagerFunction:
    Description: "UpdateDataManagerFunction Lambda function ARN"
    Value: !GetAtt UpdateDataManagerFunction.Arn
  FindDataManagerFunction:
    Description: "FindDataManagerFunction Lambda function ARN"
    Value: !GetAtt FindDataManagerFunction.Arn

  InsertUserPoolFunction:
    Description: "InsertUserPoolFunction Lambda function ARN"
    Value: !GetAtt InsertUserPoolFunction.Arn
  LoginFunction:
    Description: "LoginFunction Lambda function ARN"
    Value: !GetAtt LoginFunction.Arn
  PermissionFunction:
    Description: "PermissionFunction Lambda function ARN"
    Value: !GetAtt PermissionFunction.Arn
  SetPasswordFunction:
    Description: "SetPasswordFunction Lambda function ARN"
    Value: !GetAtt SetPasswordFunction.Arn

